name: Compile Sketch

on:
  push:
    branches: [dev, release/stm32-blackpill]
  pull_request:
    branches: [dev, release/stm32-blackpill]
  # Manual trigger
  workflow_dispatch:

jobs:
  coding-style:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout master
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Install eclint
        run: |
          npm install -g eclint

      - name: Check coding style
        run: |
          eclint check $(sh .eclint-files.sh)

  compile:
    name: Compilation
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        environment:
          - name: Main
            command: "gaggia-lego-stlink"
          - name: Scales
            command: "scales-calibration-dfu"
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v1
      - name: Install Platformio
        run: |
          python3 -c "$(curl -fsSL https://raw.githubusercontent.com/platformio/platformio/master/scripts/get-platformio.py)"
      - name: Building ${{ matrix.environment.name }}
        run: |
          ~/.platformio/penv/bin/platformio run -e ${{ matrix.environment.command }}
        env:
          PLATFORMIO_BUILD_SRC_FLAGS: -Wdouble-promotion -Wall -Werror

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - name: Install Platformio
        run: |
          python3 -c "$(curl -fsSL https://raw.githubusercontent.com/platformio/platformio/master/scripts/get-platformio.py)"
      - name: Run tests
        run: |
          ~/.platformio/penv/bin/platformio test -e test

  static-analysis:
    name: Static Analysis
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        environment:
          - "gaggia-lego-stlink"
          - "scales-calibration-stlink"
          # - "uart-stm"
          # - "uart-esp"
    steps:
      - uses: actions/checkout@v3
      - name: Install Platformio
        run: |
          python3 -c "$(curl -fsSL https://raw.githubusercontent.com/platformio/platformio/master/scripts/get-platformio.py)"
      - name: Run static analysis on ${{ matrix.environment }}
        run: |
          ~/.platformio/penv/bin/platformio check -e ${{ matrix.environment }} --fail-on-defect medium --fail-on-defect high
